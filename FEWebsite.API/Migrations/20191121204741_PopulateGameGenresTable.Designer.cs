// <auto-generated />
using System;
using FEWebsite.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FEWebsite.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191121204741_PopulateGameGenresTable")]
    partial class PopulateGameGenresTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("FEWebsite.API.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("FEWebsite.API.Models.GameGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("FEWebsite.API.Models.Gender", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("FEWebsite.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("FEWebsite.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccountCreated");

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Description")
                        .HasColumnName("AboutMe");

                    b.Property<string>("GenderId")
                        .HasColumnName("Gender");

                    b.Property<DateTime>("LastLogin");

                    b.Property<string>("Name")
                        .HasColumnName("Alias");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FEWebsite.API.Models.Game", b =>
                {
                    b.HasOne("FEWebsite.API.Models.User")
                        .WithMany("FavoriteGames")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FEWebsite.API.Models.GameGenre", b =>
                {
                    b.HasOne("FEWebsite.API.Models.User")
                        .WithMany("FavoriteGenres")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FEWebsite.API.Models.Photo", b =>
                {
                    b.HasOne("FEWebsite.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FEWebsite.API.Models.User", b =>
                {
                    b.HasOne("FEWebsite.API.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");
                });
#pragma warning restore 612, 618
        }
    }
}
